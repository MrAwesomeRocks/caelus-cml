# -*- mode: python -*-

import os
from build import build_lib
Import('env')

target = 'swakSurfacesAndSetsFunctionPlugin'

sources = Split("""
GeneralSurfacesPluginFunction.cpp
surfaceAreaPluginFunction.cpp
surfaceRelativeSurfacePluginFunction.cpp
surfaceNrOfFacesInCellPluginFunction.cpp
surfaceHasSurfacePluginFunction.cpp
surfaceDistancePluginFunction.cpp
GeneralSurfaceEvaluationPluginFunction.cpp
surfaceValueAveragePluginFunction.cpp
surfaceValueMinimumPluginFunction.cpp
surfaceValueMaximumPluginFunction.cpp
GeneralSetsPluginFunction.cpp
setHasSetPluginFunction.cpp
setNrOfPointsInCellPluginFunction.cpp
setDistancePluginFunction.cpp
GeneralSetEvaluationPluginFunction.cpp
setValueAveragePluginFunction.cpp
setValueMinimumPluginFunction.cpp
setValueMaximumPluginFunction.cpp
""")

caelus_inc = [
'sampling/lnInclude',
'lagrangian/basic/lnInclude'
]

caelus_libs = [
'core',
'sampling',
'swakParsers',
'lagrangian'
]

append_args = {}
append_args = { 'CPPPATH' : [
                  os.path.join(env['SWAK_PATH'],'functionPlugins',
                     'swakSurfacesAndSetsFunctionPlugin'),
                  os.path.join(env['SWAK_PATH'],'functionPlugins',
                     'swakSurfacesAndSetsFunctionPlugin/lnInclude'),
                  os.path.join(env['SWAK_PATH'],'swakParsers/lnInclude')
               ]
            }

build_lib(env,
          target=target,
          sources=sources,
          caelus_inc=caelus_inc,
          caelus_libs=caelus_libs,
          append_args=append_args)
