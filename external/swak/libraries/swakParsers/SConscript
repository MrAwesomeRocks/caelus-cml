# -*- mode: python -*-

from build import build_lib
Import('env')

target = 'swakParsers'

sources = Split("""
helpers/printSwakVersion.cpp
helpers/exprString.cpp
helpers/switchableNotImplemented.cpp
helpers/DebugOStream.cpp
entryToExpression/entryToExpression.cpp
entryToExpression/directEntryToExpression.cpp
entryToExpression/stringEntryToExpression.cpp
entryToExpression/boolEntryToExpression.cpp
entryToExpression/vectorEntryToExpression.cpp
entryToExpression/tensorEntryToExpression.cpp
entryToExpression/symmTensorEntryToExpression.cpp
entryToExpression/sphericalTensorEntryToExpression.cpp
entryToExpression/dimensionedScalarEntryToExpression.cpp
entryToExpression/dimensionedVectorEntryToExpression.cpp
entryToExpression/dimensionedTensorEntryToExpression.cpp
entryToExpression/dimensionedSymmTensorEntryToExpression.cpp
entryToExpression/dimensionedSphericalTensorEntryToExpression.cpp
repositories/RepositoryBase.cpp
repositories/SurfacesRepository.cpp
repositories/MeshesRepository.cpp
repositories/SetsRepository.cpp
repositories/GlobalVariablesRepository.cpp
namedEnums/LogicalAccumulationNamedEnum.cpp
namedEnums/NumericAccumulationNamedEnum.cpp
ExpressionDriverWriter.cpp
ExpressionResult/ExpressionResult.cpp
ExpressionResult/StoredExpressionResult.cpp
ExpressionResult/DelayedExpressionResult.cpp
ExpressionResult/StackExpressionResult.cpp
ExpressionResult/StoredStackExpressionResult.cpp
setsAndSurfaces/swakRegistryProxySurface.cpp
setsAndSurfaces/swakRegistryProxySet.cpp
makeSwakDataEntry.cpp
bison/FieldValueExpressionParser.cpp
bison/PatchValueExpressionParser.cpp
bison/SubsetValueExpressionParser.cpp
CommonValueExpressionDriver.cpp
flex/FieldValueExpressionLexer.cpp
FieldValueExpressionDriver.cpp
flex/PatchValueExpressionLexer.cpp
PatchValueExpressionDriver.cpp
flex/SubsetValueExpressionLexer.cpp
SubsetValueExpressionDriver.cpp
SetSubsetValueExpressionDriver.cpp
CellSetValueExpressionDriver.cpp
FaceSetValueExpressionDriver.cpp
CellZoneValueExpressionDriver.cpp
FaceZoneValueExpressionDriver.cpp
SampledSurfaceValueExpressionDriver.cpp
SampledSetValueExpressionDriver.cpp
initSwakFunctionObject.cpp
plugins/CommonPluginFunction.cpp
plugins/FieldValuePluginFunction.cpp
plugins/PatchValuePluginFunction.cpp
plugins/CellSetValuePluginFunction.cpp
plugins/CellZoneValuePluginFunction.cpp
plugins/FaceSetValuePluginFunction.cpp
plugins/FaceZoneValuePluginFunction.cpp
plugins/SampledSetValuePluginFunction.cpp
plugins/SampledSurfaceValuePluginFunction.cpp
""")

caelus_inc = [
'swakParsers/lnInclude', 
'swakParsers/bison',
'swakParsers/flex',
'sampling/lnInclude',
'surfMesh/lnInclude',
'lagrangian/basic/lnInclude',
'dynamicMesh/dynamicMesh/lnInclude'
]

caelus_libs = [
'core',
'sampling',
'lagrangian',
'surfMesh'
]

build_lib(env,
          target=target,
          sources=sources,
          caelus_inc=caelus_inc,
          caelus_libs=caelus_libs)
