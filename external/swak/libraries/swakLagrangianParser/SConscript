# -*- mode: python -*-

import os
from build import build_lib
Import('env')

target = 'swakLagrangianParser'

sources = Split("""
bison/CloudValueExpressionParser.cpp
flex/CloudValueExpressionLexer.cpp
CloudValueExpressionDriver.cpp
CloudValuePluginFunction.cpp
CloudProxy.cpp
makeCloudProxys.cpp
ReaderParticle/ReaderParticle.cpp
ReaderParticle/ReaderParticleCloud.cpp
ReaderParticle/CloudProxyForReaderParticle.cpp
CloudRepository.cpp
""")

caelus_inc = [
'sampling/lnInclude',
'thermophysicalModels/pdfs/lnInclude',
'thermophysicalModels/specie/lnInclude',
'thermophysicalModels/basic/lnInclude',
'thermophysicalModels/liquids/lnInclude',
'thermophysicalModels/liquidMixture/lnInclude',
'thermophysicalModels/solids/lnInclude',
'thermophysicalModels/solidMixture/lnInclude',
'thermophysicalModels/reactionThermo/lnInclude',
'thermophysicalModels/radiation/lnInclude',
'regionModels/regionModel/lnInclude',
'thermophysicalModels/SLGThermo/lnInclude',
'thermophysicalModels/properties/solidMixtureProperties/lnInclude',
'thermophysicalModels/properties/liquidMixtureProperties/lnInclude',
'thermophysicalModels/properties/solidProperties/lnInclude',
'thermophysicalModels/properties/liquidProperties/lnInclude',
'regionModels/surfaceFilmModels/lnInclude',
'lagrangian/basic/lnInclude',
'lagrangian/intermediate/lnInclude',
'lagrangian/solidParticle/lnInclude'
]

caelus_libs = [
'core',
'swakParsers',
'sampling',
'lagrangian',
'lagrangianIntermediate',
'thermophysicalFunctions',
'radiationModels',
'solidParticle'
]

append_args = {}
append_args = { 'CPPPATH' : [
                  os.path.join(env['SWAK_PATH'],'swakLagrangianParser'),
                  os.path.join(env['SWAK_PATH'],'swakLagrangianParser/lnInclude'),
                  os.path.join(env['SWAK_PATH'],'swakLagrangianParser/bison'),
                  os.path.join(env['SWAK_PATH'],'swakLagrangianParser/flex'),
                  os.path.join(env['SWAK_PATH'],'swakParsers/lnInclude')
               ]
            }

build_lib(env,
          target=target,
          sources=sources,
          caelus_inc=caelus_inc,
          caelus_libs=caelus_libs,
          append_args=append_args)
