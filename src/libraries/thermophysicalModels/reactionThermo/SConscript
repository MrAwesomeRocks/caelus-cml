#Copyright (C) 2014 Applied CCM
import subprocess
Import('globalEnv')

# Clone the global environment so changes made he are not pass onto subsequent 
# libraries
reactThermoEnv = globalEnv.Clone()

# Path to source
src = reactThermoEnv['LIB_SRC']

#===============================================================================
# Additions to compiler flags for this library
#===============================================================================
reactThermoEnv.Append(CCFLAGS = '')

#===============================================================================
# Additions to include directories for this library
#===============================================================================
if reactThermoEnv['WHICH_OS'] == "windows" :
  lib_inc = ['lnInclude',
  reactThermoEnv['FLEXXX_PATH'] + '/include',
  src + '/thermophysicalModels/specie/lnInclude',
  src + '/thermophysicalModels/basic/lnInclude'
  ]
else :
  lib_inc = ['lnInclude',
  src + '/thermophysicalModels/specie/lnInclude',
  src + '/thermophysicalModels/basic/lnInclude'
  ]

reactThermoEnv.Prepend(CPPPATH = lib_inc)

#===============================================================================
# Additions to link library paths for this library
#===============================================================================
lib_link_path = []
reactThermoEnv.Prepend(LIBPATH = lib_link_path)

#===============================================================================
# Additions to link libraries for this library
#===============================================================================
lib_link = ['core','specie','basicThermophysicalModels']
reactThermoEnv.Append(LIBS = lib_link)

#===============================================================================
# flex ++ - only for Linux and Mac
#===============================================================================
if reactThermoEnv['WHICH_OS'] == "windows" :
  source_from_flex = ['chemistryReaders/chemkinReader/windows/chemkinLexer.cpp']
else :
  source_to_flex = 'chemistryReaders/chemkinReader/chemkinLexer.ll'
  
  flex_target = 'chemistryReaders/chemkinReader/posix/chemkinLexer.cpp'
  
  reactThermoEnv.CXXFile(target= flex_target, source = source_to_flex, 
  LEXFLAGS = '-+' )
  
  source_from_flex = [flex_target]

#===============================================================================
# Sources for this library
#===============================================================================
src_files = Split("""
  chemistryReaders/chemkinReader/chemkinReader.cpp
  chemistryReaders/chemistryReader/makeChemistryReaders.cpp
  mixtures/basicMultiComponentMixture/basicMultiComponentMixture.cpp
  combustionThermo/hCombustionThermo/hCombustionThermo.cpp
  combustionThermo/hCombustionThermo/hCombustionThermoNew.cpp
  combustionThermo/hCombustionThermo/hCombustionThermos.cpp
  combustionThermo/hsCombustionThermo/hsCombustionThermo.cpp
  combustionThermo/hsCombustionThermo/hsCombustionThermoNew.cpp
  combustionThermo/hsCombustionThermo/hsCombustionThermos.cpp
  combustionThermo/hhuCombustionThermo/hhuCombustionThermo.cpp
  combustionThermo/hhuCombustionThermo/hhuCombustionThermoNew.cpp
  combustionThermo/hhuCombustionThermo/hhuCombustionThermos.cpp
  reactionThermo/hReactionThermo/hReactionThermo.cpp
  reactionThermo/hReactionThermo/hReactionThermoNew.cpp
  reactionThermo/hReactionThermo/hReactionThermos.cpp
  reactionThermo/hsReactionThermo/hsReactionThermo.cpp
  reactionThermo/hsReactionThermo/hsReactionThermoNew.cpp
  reactionThermo/hsReactionThermo/hsReactionThermos.cpp
  derivedFvPatchFields/fixedUnburntEnthalpy/fixedUnburntEnthalpyFvPatchScalarField.cpp
  derivedFvPatchFields/gradientUnburntEnthalpy/gradientUnburntEnthalpyFvPatchScalarField.cpp
  derivedFvPatchFields/mixedUnburntEnthalpy/mixedUnburntEnthalpyFvPatchScalarField.cpp
  """) + source_from_flex

#===============================================================================
# Build this library
#===============================================================================
libreactionThermophysicalModels = reactThermoEnv.SharedLibrary(target = 
'reactionThermophysicalModels', source = src_files)

#===============================================================================
# Install this library
#===============================================================================
install_dir = reactThermoEnv['LIB_PLATFORM_INSTALL']
reactThermoEnv.Alias('install', install_dir)
reactThermoEnv.Install(install_dir, libreactionThermophysicalModels)

if (reactThermoEnv['WHICH_OS'] == "darwin"):

  reactThermoEnv.Append(SHLINKFLAGS ='-install_name @' + reactThermoEnv['LIB_PLATFORM_INSTALL'] + '/libreactionThermophysicalModels.dylib')
