#Copyright (C) 2014 Applied CCM
import subprocess
Import('globalEnv')

# Clone the global environment so changes made he are not pass onto subsequent
# libraries
turbCompRASEnv = globalEnv.Clone()

# Path to source
src = turbCompRASEnv['LIB_SRC']

#===============================================================================
# Additions to compiler flags for this library
#===============================================================================
turbCompRASEnv.Append(CCFLAGS = '')

#===============================================================================
# Additions to include directories for this library
#===============================================================================
lib_inc = ['lnInclude',
src + '/turbulenceModels',
src + '/thermophysicalModels/basic/lnInclude',   
src + '/thermophysicalModels/basicSolidThermo/lnInclude'      
]
turbCompRASEnv.Prepend(CPPPATH = lib_inc)
  
#===============================================================================
# Additions to link library paths for this library
#===============================================================================
lib_link_path = []
turbCompRASEnv.Prepend(LIBPATH = lib_link_path)

#===============================================================================
# Additions to link libraries for this library
#===============================================================================
lib_link = ['core','specie','compressibleTurbulenceModel',
'basicThermophysicalModels']
turbCompRASEnv.Append(LIBS = lib_link)
  
#===============================================================================
# Sources for this library
#===============================================================================
src_files = Split("""
  RASModel/RASModel.cpp
  laminar/laminar.cpp
  realizableKE/realizableKE.cpp
  derivedFvPatchFields/wallFunctions/alphatWallFunctions/alphatWallFunction/alphatWallFunctionFvPatchScalarField.cpp
  derivedFvPatchFields/wallFunctions/alphatWallFunctions/alphatJayatillekeWallFunction/alphatJayatillekeWallFunctionFvPatchScalarField.cpp
  derivedFvPatchFields/wallFunctions/mutWallFunctions/mutkRoughWallFunction/mutkRoughWallFunctionFvPatchScalarField.cpp
  derivedFvPatchFields/wallFunctions/mutWallFunctions/mutkWallFunction/mutkWallFunctionFvPatchScalarField.cpp
  derivedFvPatchFields/wallFunctions/mutWallFunctions/mutURoughWallFunction/mutURoughWallFunctionFvPatchScalarField.cpp
  derivedFvPatchFields/wallFunctions/mutWallFunctions/mutUSpaldingWallFunction/mutUSpaldingWallFunctionFvPatchScalarField.cpp
  derivedFvPatchFields/wallFunctions/mutWallFunctions/mutUWallFunction/mutUWallFunctionFvPatchScalarField.cpp
  derivedFvPatchFields/wallFunctions/mutWallFunctions/mutLowReWallFunction/mutLowReWallFunctionFvPatchScalarField.cpp
  derivedFvPatchFields/wallFunctions/epsilonWallFunctions/epsilonWallFunction/epsilonWallFunctionFvPatchScalarField.cpp
  derivedFvPatchFields/wallFunctions/omegaWallFunctions/omegaWallFunction/omegaWallFunctionFvPatchScalarField.cpp
  derivedFvPatchFields/wallFunctions/kqRWallFunctions/kqRWallFunction/kqRWallFunctionFvPatchFields.cpp
  derivedFvPatchFields/htcConv/htcConvFvPatchScalarField.cpp
  derivedFvPatchFields/turbulentMixingLengthDissipationRateInlet/turbulentMixingLengthDissipationRateInletFvPatchScalarField.cpp
  derivedFvPatchFields/turbulentMixingLengthFrequencyInlet/turbulentMixingLengthFrequencyInletFvPatchScalarField.cpp
  """)

#===============================================================================
# Build this library
#===============================================================================
libcompressibleRASModels = turbCompRASEnv.SharedLibrary(target = 
'compressibleRASModels', source = src_files)

#===============================================================================
# Install this library
#===============================================================================
install_dir = turbCompRASEnv['LIB_PLATFORM_INSTALL']
turbCompRASEnv.Alias('install', install_dir)
turbCompRASEnv.Install(install_dir, libcompressibleRASModels)

if (turbCompRASEnv['WHICH_OS'] == "darwin"):

  turbCompRASEnv.Append(SHLINKFLAGS ='-install_name @executable_path/../lib/libcompressibleRASModels.dylib')
