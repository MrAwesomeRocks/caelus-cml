#Copyright (C) 2014 Applied CCM
import subprocess
Import('globalEnv')

# Clone the global environment so changes made he are not pass onto subsequent 
# libraries
funcObjForceEnv = globalEnv.Clone()

sl = funcObjForceEnv['SLASH']

#===============================================================================
# Additions to compiler flags for this library
#===============================================================================
funcObjForceEnv.Append(CCFLAGS = '')

#===============================================================================
# Additions to include directories for this library
#===============================================================================
lib_inc = ['lnInclude',
funcObjForceEnv['LIB_SRC'] + '/sampling/lnInclude',
funcObjForceEnv['LIB_SRC'] + '/thermophysicalModels/basic/lnInclude',
funcObjForceEnv['LIB_SRC'] + '/turbulenceModels/LES/LESdeltas/lnInclude',
funcObjForceEnv['LIB_SRC'] + '/transportModels',
funcObjForceEnv['LIB_SRC'] + '/turbulenceModels'
]
funcObjForceEnv.Prepend(CPPPATH = lib_inc)

#===============================================================================
# Additions to link library paths for this library
#===============================================================================
lib_link_path = []
funcObjForceEnv.Prepend(LIBPATH = lib_link_path)

#===============================================================================
# Additions to link libraries for this library
#===============================================================================
lib_link = ['core', 'specie', 'sampling',
'incompressibleTransportModels','incompressibleRASModels',
'incompressibleLESModels','basicThermophysicalModels',
'compressibleRASModels','compressibleLESModels'
]
funcObjForceEnv.Append(LIBS = lib_link)
 
#===============================================================================
# Sources for this library
#===============================================================================
src_files = Split("""
  forces/forces.cpp
  forces/forcesFunctionObject.cpp
  forceCoeffs/forceCoeffs.cpp
  forceCoeffs/forceCoeffsFunctionObject.cpp
  pointPatchFields/derived/sixDoFRigidBodyMotion/sixDoFRigidBodyMotion.cpp
  pointPatchFields/derived/sixDoFRigidBodyMotion/sixDoFRigidBodyMotionIO.cpp
  pointPatchFields/derived/sixDoFRigidBodyMotion/sixDoFRigidBodyMotionState.cpp
  pointPatchFields/derived/sixDoFRigidBodyMotion/sixDoFRigidBodyMotionStateIO.cpp
  pointPatchFields/derived/sixDoFRigidBodyMotion/sixDoFRigidBodyMotionRestraint/sixDoFRigidBodyMotionRestraint/sixDoFRigidBodyMotionRestraint.cpp
  pointPatchFields/derived/sixDoFRigidBodyMotion/sixDoFRigidBodyMotionRestraint/sixDoFRigidBodyMotionRestraint/sixDoFRigidBodyMotionRestraintNew.cpp
  pointPatchFields/derived/sixDoFRigidBodyMotion/sixDoFRigidBodyMotionRestraint/linearAxialAngularSpring/linearAxialAngularSpring.cpp
  pointPatchFields/derived/sixDoFRigidBodyMotion/sixDoFRigidBodyMotionRestraint/linearSpring/linearSpring.cpp
  pointPatchFields/derived/sixDoFRigidBodyMotion/sixDoFRigidBodyMotionRestraint/sphericalAngularSpring/sphericalAngularSpring.cpp
  pointPatchFields/derived/sixDoFRigidBodyMotion/sixDoFRigidBodyMotionRestraint/tabulatedAxialAngularSpring/tabulatedAxialAngularSpring.cpp
  pointPatchFields/derived/sixDoFRigidBodyMotion/sixDoFRigidBodyMotionConstraint/sixDoFRigidBodyMotionConstraint/sixDoFRigidBodyMotionConstraint.cpp
  pointPatchFields/derived/sixDoFRigidBodyMotion/sixDoFRigidBodyMotionConstraint/sixDoFRigidBodyMotionConstraint/sixDoFRigidBodyMotionConstraintNew.cpp
  pointPatchFields/derived/sixDoFRigidBodyMotion/sixDoFRigidBodyMotionConstraint/fixedAxis/fixedAxis.cpp
  pointPatchFields/derived/sixDoFRigidBodyMotion/sixDoFRigidBodyMotionConstraint/fixedLine/fixedLine.cpp
  pointPatchFields/derived/sixDoFRigidBodyMotion/sixDoFRigidBodyMotionConstraint/fixedOrientation/fixedOrientation.cpp
  pointPatchFields/derived/sixDoFRigidBodyMotion/sixDoFRigidBodyMotionConstraint/fixedPlane/fixedPlane.cpp
  pointPatchFields/derived/sixDoFRigidBodyMotion/sixDoFRigidBodyMotionConstraint/fixedPoint/fixedPoint.cpp
  pointPatchFields/derived/sixDoFRigidBodyDisplacement/sixDoFRigidBodyDisplacementPointPatchVectorField.cpp
  pointPatchFields/derived/uncoupledSixDoFRigidBodyDisplacement/uncoupledSixDoFRigidBodyDisplacementPointPatchVectorField.cpp
  """) 

#===============================================================================
# Build this library
#===============================================================================
libforces = funcObjForceEnv.SharedLibrary(target = 'forces', 
source = src_files)

#===============================================================================
# Install this library
#===============================================================================
install_dir = funcObjForceEnv['LIB_PLATFORM_INSTALL']
funcObjForceEnv.Alias('install', install_dir)
funcObjForceEnv.Install(install_dir, libforces)

if (funcObjForceEnv['WHICH_OS'] == "darwin"):

  funcObjForceEnv.Append(SHLINKFLAGS ='-install_name @' + funcObjForceEnv['LIB_PLATFORM_INSTALL'] + '/libforces.dylib')