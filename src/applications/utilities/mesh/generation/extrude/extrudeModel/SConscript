#Copyright (C) 2014 Applied CCM
import subprocess
Import('globalEnv')

# Clone the global environment so changes made he are not pass onto subsequent 
# libraries
extrudeModelEnv = globalEnv.Clone()

# Path to source
src = extrudeModelEnv['LIB_SRC']

#===============================================================================
# Additions to include directories for this library
#===============================================================================
lib_inc = ['include', src + '/dynamicMesh/lnInclude']
extrudeModelEnv.Prepend(CPPPATH = lib_inc)

#===============================================================================
# Additions to link libraries for this library
#===============================================================================
lib_link = ['libdynamicMesh']
  
extrudeModelEnv.Append(LIBS = lib_link)

#===============================================================================
# Sources for this library
#===============================================================================
src_files = Split("""
  extrudeModel/extrudeModel.cpp
  extrudeModel/extrudeModelNew.cpp
  linearNormal/linearNormal.cpp
  linearDirection/linearDirection.cpp
  linearRadial/linearRadial.cpp
  sigmaRadial/sigmaRadial.cpp
  wedge/wedge.cpp
  """)

#===============================================================================
# Build this library
#===============================================================================
libextrudeModel = extrudeModelEnv.SharedLibrary(target = 
'extrudeModel', source = src_files)

#===============================================================================
# Install this library
#===============================================================================
install_dir = extrudeModelEnv['LIB_PLATFORM_INSTALL']
extrudeModelEnv.Alias('install', install_dir)
extrudeModelEnv.Install(install_dir, libextrudeModel)
