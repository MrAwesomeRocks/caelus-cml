#Copyright (C) 2014 Applied CCM
import subprocess
Import('globalEnv')

# Clone the global environment so changes made he are not pass onto subsequent 
# libraries
autoPatchEnv = globalEnv.Clone()

# Path to source
src = autoPatchEnv['LIB_SRC']

#===============================================================================
# Additions to compiler flags for this executable
#===============================================================================
autoPatchEnv.Append(CCFLAGS = '')

#===============================================================================
# Additions to include directories for this executable
#===============================================================================
lib_inc = [src + '/dynamicMesh/lnInclude'
]

autoPatchEnv.Prepend(CPPPATH = lib_inc)

#===============================================================================
# Additions to link library paths for this executable
#===============================================================================
lib_link_path = []
autoPatchEnv.Prepend(LIBPATH = lib_link_path)

#===============================================================================
# Additions to link libraries for this executable
#===============================================================================
lib_link = ['dynamicMesh']
  
autoPatchEnv.Append(LIBS = lib_link)

#===============================================================================
# Sources for this executable
#===============================================================================
src_files = Split("""
  autoPatch.cpp
  """)

#===============================================================================
# Build this executable
#===============================================================================
binautoPatch = autoPatchEnv.Program(target = 
'autoPatch', source = src_files)

#===============================================================================
# Install this executable
#===============================================================================
install_dir = autoPatchEnv['BIN_PLATFORM_INSTALL']
autoPatchEnv.Alias('install', install_dir)
autoPatchEnv.Install(install_dir, binautoPatch)
