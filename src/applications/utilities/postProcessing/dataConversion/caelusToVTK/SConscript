#Copyright (C) 2014 Applied CCM
import subprocess
Import('globalEnv')

# Clone the global environment so changes made he are not pass onto subsequent 
# libraries
caelusToVTKEnv = globalEnv.Clone()

# Path to source
src = caelusToVTKEnv['LIB_SRC']

#===============================================================================
# Additions to compiler flags for this executable
#===============================================================================
caelusToVTKEnv.Append(CCFLAGS = '')

#===============================================================================
# Additions to include directories for this executable
#===============================================================================
lib_inc = [src + '/lagrangian/basic/lnInclude']
caelusToVTKEnv.Prepend(CPPPATH = lib_inc)

#===============================================================================
# Additions to link library paths for this executable
#===============================================================================
lib_link_path = []
caelusToVTKEnv.Prepend(LIBPATH = lib_link_path)

#===============================================================================
# Additions to link libraries for this executable
#===============================================================================
if caelusToVTKEnv['WHICH_OS'] == "windows":
  caelusToVTKEnv.Prepend(LINKFLAGS = ' -u genericPatchFieldsLoad')
  lib_link = ['libgenericPatchFields','liblagrangian']
else:
  lib_link = ['genericPatchFields','lagrangian']
     

caelusToVTKEnv.Append(LIBS = lib_link)

#===============================================================================
# Sources for this executable
#===============================================================================
src_files = Split("""
  surfaceMeshWriter.cpp
  caelusToVTK.cpp
  internalWriter.cpp
  lagrangianWriter.cpp
  patchWriter.cpp
  writeFuns.cpp
  writeFaceSet.cpp
  writePointSet.cpp
  writeSurfFields.cpp
  vtkMesh.cpp
  vtkTopo.cpp
  """)

#===============================================================================
# Build this executable
#===============================================================================
bincaelusToVTK = caelusToVTKEnv.Program(target = 'caelusToVTK', 
source = src_files)

#===============================================================================
# Install this executable
#===============================================================================
install_dir = caelusToVTKEnv['BIN_PLATFORM_INSTALL']
caelusToVTKEnv.Alias('install', install_dir)
caelusToVTKEnv.Install(install_dir, bincaelusToVTK)
