#Copyright (C) 2014 Applied CCM
import subprocess
Import('globalEnv')

# Clone the global environment so changes made he are not pass onto subsequent 
# libraries
createTurbulenceFieldsEnv = globalEnv.Clone()

# Path to source
src = createTurbulenceFieldsEnv['LIB_SRC']

#===============================================================================
# Additions to compiler flags for this executable
#===============================================================================
createTurbulenceFieldsEnv.Append(CCFLAGS = '')

#===============================================================================
# Additions to include directories for this executable
#===============================================================================
lib_inc = [
src + '/turbulenceModels',
src + '/turbulenceModels/incompressible/turbulenceModel/lnInclude',
src + '/turbulenceModels/incompressible/RAS/lnInclude',  
src + '/turbulenceModels/incompressible/RAS/RASModel',
src + '/transportModels',
src + '/transportModels/incompressible/lnInclude',  
]        
createTurbulenceFieldsEnv.Prepend(CPPPATH = lib_inc)

#===============================================================================
# Additions to link library paths for this executable
#===============================================================================
lib_link_path = []
createTurbulenceFieldsEnv.Prepend(LIBPATH = lib_link_path)

#===============================================================================
# Additions to link libraries for this executable
#===============================================================================
if createTurbulenceFieldsEnv['WHICH_OS'] == "windows":
  createTurbulenceFieldsEnv.Prepend(LINKFLAGS = ' -u genericPatchFieldsLoad -u incompressibleRASModelsLoad')
  lib_link = ['libincompressibleTurbulenceModel',
  'libincompressibleRASModels','libincompressibleTransportModels',
  'libgenericPatchFields']
else:
  lib_link = ['incompressibleRASModels','incompressibleTurbulenceModel',
  'incompressibleTransportModels','genericPatchFields']
      
createTurbulenceFieldsEnv.Append(LIBS = lib_link)

#===============================================================================
# Sources for this executable
#===============================================================================
src_files = Split("""  
  createTurbulenceFields.cpp
  """)

#===============================================================================
# Build this executable
#===============================================================================
bincreateTurbulenceFields = createTurbulenceFieldsEnv.Program(target =
'createTurbulenceFields', source = src_files)

#===============================================================================
# Install this executable
#===============================================================================
install_dir = createTurbulenceFieldsEnv['BIN_PLATFORM_INSTALL']
createTurbulenceFieldsEnv.Alias('install', install_dir)
createTurbulenceFieldsEnv.Install(install_dir, bincreateTurbulenceFields)
