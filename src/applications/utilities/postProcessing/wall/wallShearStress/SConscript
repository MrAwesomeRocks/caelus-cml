#Copyright (C) 2014 Applied CCM
import subprocess
Import('globalEnv')

# Clone the global environment so changes made he are not pass onto subsequent 
# libraries
wallShearStressEnv = globalEnv.Clone()

# Path to source
src = wallShearStressEnv['LIB_SRC']

#===============================================================================
# Additions to compiler flags for this executable
#===============================================================================
wallShearStressEnv.Append(CCFLAGS = '')

#===============================================================================
# Additions to include directories for this executable
#===============================================================================
lib_inc = [
src + '/turbulenceModels',
src + '/turbulenceModels/compressible/turbulenceModel/lnInclude',
src + '/turbulenceModels/incompressible/turbulenceModel/lnInclude',
src + '/turbulenceModels/compressible/RAS/lnInclude',
src + '/turbulenceModels/incompressible/RAS/lnInclude',
src + '/transportModels',
src + '/transportModels/incompressible/lnInclude',
src + '/thermophysicalModels/basic/lnInclude'
]
wallShearStressEnv.Prepend(CPPPATH = lib_inc)

#===============================================================================
# Additions to link library paths for this executable
#===============================================================================
lib_link_path = []
wallShearStressEnv.Prepend(LIBPATH = lib_link_path)

#===============================================================================
# Additions to link libraries for this executable
#===============================================================================
if wallShearStressEnv['WHICH_OS'] == "windows":
  wallShearStressEnv.Prepend(LINKFLAGS = ' -u genericPatchFieldsLoad -u incompressibleRASModelsLoad -u compressibleRASModelsLoad')

lib_link = ['genericPatchFields','compressibleRASModels',
'reactionThermophysicalModels','specie','basicThermophysicalModels',
'compressibleTurbulenceModel','incompressibleRASModels',
'incompressibleTransportModels','incompressibleTurbulenceModel']

wallShearStressEnv.Append(LIBS = lib_link)

#===============================================================================
# Sources for this executable
#===============================================================================
src_files = Split("""
 wallShearStress.cpp
  """)

#===============================================================================
# Build this executable
#===============================================================================
binwallShearStress=wallShearStressEnv.Program(target = 'wallShearStress', 
source = src_files)

#===============================================================================
# Install this executable
#===============================================================================
install_dir =wallShearStressEnv['BIN_PLATFORM_INSTALL']
wallShearStressEnv.Alias('install', install_dir)
wallShearStressEnv.Install(install_dir, binwallShearStress)
