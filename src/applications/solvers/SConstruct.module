#import os
#import sys
#import platform
#import subprocess
#import re

from Caelus.build import *
import Caelus

#===============================================================================
# Extra include path(s)
#===============================================================================
globalEnv.Append(CPPPATH = ['lnInclude', '.'])

#===============================================================================
# Extra linker flags
#===============================================================================

#===============================================================================
# Extra link library path(s)
#===============================================================================
if Caelus.WHICH_OS == "windows" :
   globalEnv.Append(LIBPATH = [''])

elif Caelus.WHICH_OS == "darwin" :
   globalEnv.Append(LIBPATH = [Caelus.MPI_LIB])

else :
   globalEnv.Append(LIBPATH = [Caelus.MPI_LIB])

#===============================================================================
# Extra link library(ies)
#===============================================================================
if Caelus.WHICH_OS == "windows" :
   globalEnv.Append(LIBS = ['core'])
  
elif Caelus.WHICH_OS == "darwin" :
   globalEnv.Append(LIBS = ['pthread', 'core'])

else :
   globalEnv.Append(LIBS = ['core'])

#===============================================================================
# Sub-directories to traverse for compile
#===============================================================================
subdirs = [
   'basic/potentialSolver',
   'heatTransfer/buoyantBoussinesqSimpleSolver',
   'heatTransfer/buoyantSimpleSolver',
   'incompressible/simpleSolver',
   'incompressible/simpleSolver/SRFSimpleSolver',
   'incompressible/pisoSolver',
   'incompressible/pimpleSolver',
   'incompressible/pimpleSolver/SRFPimpleSolver',
   'incompressible/pimpleSolver/pimpleDyMSolver',
   'compressible/PBNS/cpbnsLTS',
   'compressible/PBNS/cpbnsPIMPLE',
   'compressible/DBNS/explicitDBNSSolver',
   'combustion/reactingSolver',
   'multiphase/vofSolver',
   'multiphase/vofLPTSolver',
]

#===============================================================================
# Execute SConscript files in each sub-directory
#===============================================================================
for dir in subdirs:
  if GetOption('clean'):
    print ">> Removing lnInclude directory for " + dir
    subprocess.call(['python', 
    Caelus.CAELUS_PROJECT_DIR + '/bin/cleanLnInclude.py', '-s', dir])
    SConscript( os.path.join(dir, 'SConscript'), exports = ['globalEnv'])
	
  else:
    print ">> Creating lnInclude directory for " + dir
    subprocess.call(['python', 
    Caelus.CAELUS_PROJECT_DIR + '/bin/createLnInclude.py', '-s', dir])
    SConscript( os.path.join(dir, 'SConscript'), exports = ['globalEnv'])

#===============================================================================
# That's All Folks!
#===============================================================================
