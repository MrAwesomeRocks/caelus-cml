#Copyright (C) 2015 Applied CCM
import subprocess
Import('globalEnv')

# Clone the global environment so changes made he are not pass onto subsequent 
# libraries
vofLPTSolEnv = globalEnv.Clone()

# Path to source
src = vofLPTSolEnv['LIB_SRC']

#===============================================================================
# Additions to include directories for this executable
#===============================================================================
lib_inc = ['../vofSolver',
src + '/turbulenceModels/incompressible/turbulenceModel',
src + '/turbulenceModels/incompressible/turbulenceModel/lnInclude', 
src + '/transportModels',
src + '/transportModels/incompressible/singlePhaseTransportModel',
src + '/transportModels/incompressible/lnInclude',
src + '/transportModels/interfaceProperties/lnInclude',
src + '/fvOptions/lnInclude',
src + '/sampling/lnInclude',
src + '/lagrangian/basic/lnInclude',
src + '/lagrangian/intermediate/lnInclude',
src + '/regionModels/regionModel/lnInclude',
src + '/regionModels/surfaceFilmModels/lnInclude'
]
vofLPTSolEnv.Prepend(CPPPATH = lib_inc)

#===============================================================================
# Additions to link libraries for this executable
#===============================================================================
if vofLPTSolEnv['WHICH_OS'] == "windows":
  vofLPTSolEnv.Prepend(LINKFLAGS = ' -u incompressibleRASModelsLoad  -u incompressibleLESModelsLoad -u incompressibleVLESModelsLoad')

lib_link = ['incompressibleTurbulenceModel', 'incompressibleRASModels',
'incompressibleLESModels','incompressibleTransportModels','twoPhaseInterfaceProperties',
'fvOptions','interfaceProperties', 'lagrangian', 'lagrangianIntermediate',
'regionModels', 'surfaceFilmModels','incompressibleVLESModels']
vofLPTSolEnv.Append(LIBS = lib_link)

#===============================================================================
# Sources for this executable
#===============================================================================
src_files = Split("""
  vofLPTSolver.cpp
  """)

#===============================================================================
# Build this executable
#===============================================================================
binvofLPTSol = vofLPTSolEnv.Program(target = 'vofLPTSolver',
source = src_files)

#===============================================================================
# Install this executable
#===============================================================================
install_dir = vofLPTSolEnv['BIN_PLATFORM_INSTALL']
vofLPTSolEnv.Alias('install', install_dir)
vofLPTSolEnv.Install(install_dir, binvofLPTSol)
