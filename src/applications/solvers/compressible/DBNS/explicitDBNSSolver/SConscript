#Copyright (C) 2014 Applied CCM
import subprocess
Import('globalEnv')

# Clone the global environment so changes made he are not pass onto subsequent 
# libraries
explicitDBNSSolverEnv = globalEnv.Clone()

# Path to source
src = explicitDBNSSolverEnv['LIB_SRC']

#===============================================================================
# Additions to compiler flags for this executable
#===============================================================================
explicitDBNSSolverEnv.Append(CCFLAGS = '')

#===============================================================================
# Additions to include directories for this executable
#===============================================================================
lib_inc = [explicitDBNSSolverEnv['LIB_SRC'] +  '/turbulenceModels',
src + '/turbulenceModels/compressible/turbulenceModel/lnInclude', 
src + '/turbulenceModels/compressible/RAS/RASModel', 
src + '/turbulenceModels/compressible/RAS/lnInclude',
src + '/thermophysicalModels',
src + '/thermophysicalModels/basic/psiThermo/basicPsiThermo',
src + '/thermophysicalModels/basic/basicThermo',
src + '/transportModels/basic/lnInclude',
src + '/fvOptions/lnInclude',
src + '/sampling/lnInclude',
src + '/core/lnInclude',
src + '/thermophysicalModels/numericFluxes/DBNS/numericFlux/roeFDSFlux',
src + '/thermophysicalModels/numericFluxes/DBNS/numericFlux/llfFlux',
src + '/thermophysicalModels/numericFluxes/DBNS/numericFlux/hllcFlux',
src + '/thermophysicalModels/numericFluxes/DBNS/numericFlux/ktpFlux'
]
explicitDBNSSolverEnv.Prepend(CPPPATH = lib_inc)

#===============================================================================
# Additions to link library paths for this executable
#===============================================================================
lib_link_path = []
explicitDBNSSolverEnv.Prepend(LIBPATH = lib_link_path)

#===============================================================================
# Additions to link libraries for this executable
#===============================================================================
if explicitDBNSSolverEnv['WHICH_OS'] == "windows":
  explicitDBNSSolverEnv.Prepend(LINKFLAGS = ' -u compressibleRASModelsLoad -u compressibleLESSModelsLoad -u compressibleVLESModelsLoad')

lib_link = ['compressibleTurbulenceModel', 'compressibleRASModels',
'basicThermophysicalModels', 'fvOptions', 'sampling', 'compressibleLESModels','numericFlux']
  
explicitDBNSSolverEnv.Append(LIBS = lib_link)

#===============================================================================
# Sources for this executable
#===============================================================================
src_files = Split("""
  explicitDBNSSolver.cpp
  """)

#===============================================================================
# Build this executable
#===============================================================================
binexplicitDBNSSolver = explicitDBNSSolverEnv.Program(target = 'explicitDBNSSolver',
source = src_files)

#===============================================================================
# Install this executable
#===============================================================================
install_dir = explicitDBNSSolverEnv['BIN_PLATFORM_INSTALL']
explicitDBNSSolverEnv.Alias('install', install_dir)
explicitDBNSSolverEnv.Install(install_dir, binexplicitDBNSSolver)
